version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dock-dash-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 12qwaszx
      MYSQL_DATABASE: user_auth_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dock-dash-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dock-dash-backend
    environment:
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: 12qwaszx
      DB_NAME: user_auth_db
      
      # Server configuration
      MGMT_SERVER_PORT: 8500
      MGMT_SERVER_IP: 0.0.0.0
      
      # Agent configuration
      AGENT_PORT: 8510
      
      # Docker configuration
      DOCKER_IMAGE: gpu-dev-environment
      DOCKER_TAG: latest
      DOCKER_HOSTNAME: cxl-dev
      DOCKER_CPU: 4
      DOCKER_CPU_PERCENT: 100
      DOCKER_MEM_LMT: 4g
      DOCKER_MEM_SWAP: 5g
      
      # Code server configuration
      CODE_DEFAULT_WORKSPACE: /workspace
      CODE_PORT: 8080
      CODE_CONFIG_MOUNT: /config
      SUDO_PASSWORD: abc
      
      # Jupyter configuration
      JUPYTER_PORT: 8888
      
      # Paths
      QVP_BINARY_MOUNT: /opt/qvp
      GUEST_OS_MOUNT: /opt/os/guestos
      TOOLS_MOUNT: /opt/tools
      WORKDIR_TEMPLATE: /home/vishwa/template/
      WORKDIR_DEPLOY: /home/vishwa/vms/
    ports:
      - "8500:8500"
    volumes:
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock
      # Application logs
      - ./backend/logs:/app/logs
      # Configuration files
      - ./backend/agents.txt:/app/agents.txt
      - ./backend/config.toml:/app/config.toml
    networks:
      - dock-dash-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Optional - if you want to containerize frontend too)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: dock-dash-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8500
    networks:
      - dock-dash-network
    depends_on:
      - backend
    restart: unless-stopped
    profiles:
      - frontend

volumes:
  mysql_data:
    driver: local

networks:
  dock-dash-network:
    driver: bridge
